[
  {
    "title": "Automate the Boring Stuff with Python",
    "author": "Al Sweigart",
    "year": "2019",
    "edition": "2nd Edition",
    "full_description": "Automate the Boring Stuff with Python, 3rd edition coming soon. Click here for details.\nLook Inside!\n\n>\n\n\nDownload Chapter 7: PATTERN MATCHING WITH REGULAR EXPRESSIONS (PDF)\nDownload the files used in the book\n\nIf you\u2019ve ever spent hours renaming files or updating hundreds of spreadsheet cells, you know how tedious tasks like these can be. But what if you could have your computer do them for you?\nIn this fully revised second edition of the best-selling classic Automate the Boring Stuff with Python, you\u2019ll learn how to use Python to write programs that do in minutes what would take you hours to do by hand\u2014no prior programming experience required. You'll learn the basics of Python and explore Python\u2019s rich library of modules for performing specific tasks, like scraping data off websites, reading PDF and Word documents, and automating clicking and typing tasks.\nThe second edition of this international fan favorite includes a brand-new chapter on input validation, as well as tutorials on automating Gmail and Google Sheets, plus tips on automatically updating CSV files. You\u2019ll learn how to create programs that effortlessly perform useful feats of automation to:\n\nSearch for text in a file or across multiple files\nCreate, update, move, and rename files and folders\nSearch the Web and download online content\nUpdate and format data in Excel spreadsheets of any size\nSplit, merge, watermark, and encrypt PDFs\nSend email responses and text notifications\nFill out online forms\n\nStep-by-step instructions walk you through each program, and updated practice projects at the end of each chapter challenge you to improve those programs and use your newfound skills to automate similar tasks. \nDon't spend your time doing work a well-trained monkey could do. Even if you've never written a line of code, you can make your computer do the grunt work. Learn how in Automate the Boring Stuff with Python, 2nd Edition.\n"
  },
  {
    "title": "Automate the Boring Stuff with Python",
    "author": "Al Sweigart",
    "year": "2025",
    "edition": "3rd Edition",
    "full_description": "If you\u2019ve ever spent hours renaming files or updating hundreds of spreadsheet cells, you know how tedious tasks like these can be. But what if you could have your computer do them for you? In this fully revised edition of the best-selling classic Automate the Boring Stuff with Python, you\u2019ll learn how to use Python to write programs that do in minutes what would take you hours to do by hand\u2014no prior programming experience required. You'll learn the basics of coding in Python and explore the language\u2019s\u2019s rich library of modules for performing specific tasks, like scraping data from websites, searching for text across multiple files, and merging, watermarking, or encrypting PDFs.\nThe third edition includes:\n\nExpanded coverage of developer techniques, like creating command line programs\nUpdated examples and new projects\nAdditional chapters about working with SQLite databases, speech-recognition technology, video and audio editing, and text-to-speech capabilities\nSimplified explanations (based on reader feedback) of beginner programming concepts, like loops and conditionals\n\nEven if you've never written a line of code, Automate the Boring Stuff with Python, 3rd Edition will teach you how to make your computer take on tedious tasks and do all your grunt work\u2014the way it should be\n"
  },
  {
    "title": "Beyond the Basic Stuff with Python",
    "author": "Al Sweigart",
    "year": "2020",
    "edition": null,
    "full_description": "Look Inside!\n\n\n\nDownload Chapter 2: ENVIRONMENT SETUP AND THE COMMAND LINE\nBRIDGE THE GAP BETWEEN NOVICE AND PROFESSIONAL\nYou\u2019ve completed a basic Python programming tutorial or finished Al Sweigart\u2019s best selling Automate the Boring Stuff with Python. What\u2019s the next step toward becoming a capable, confident software developer?\nWelcome to Beyond the Basic Stuff with Python. More than a mere collection of advanced syntax and masterful tips for writing clean code, this book will teach you how to advance your Python programming skills by using the command line and other professional tools like code formatters, type checkers, linters, and version control. Sweigart takes you through best practices for setting up your development environment, naming variables, and improving readability, then tackles documentation, organization and performance measurement, as well as object-oriented design and the Big-O algorithm analysis commonly used in coding interviews. The skills you learn will boost your ability to program\u2014not just in Python but in any language.\nYou\u2019ll learn:\n\nCoding style, and how to use Python\u2019s Black auto-formatting tool for cleaner code\nCommon sources of bugs, and how to detect them with static analyzers\nHow to structure the files in your code projects with the Cookiecutter template tool\nFunctional programming techniques like lambda and higher-order functions\nHow to profile the speed of your code with Python\u2019s built-in timeit and cProfile modules\nThe computer science behind Big-O algorithm analysis\nHow to make your comments and docstrings informative, and how often to write them\nHow to create classes in object-oriented programming, and why they\u2019re used to organize code\n\nToward the end of the book you\u2019ll read a detailed source-code breakdown of two classic command-line games, the Tower of Hanoi (a logic puzzle) and Four-in-a-Row (a two-player tile-dropping game), and a breakdown of how their code follows the book\u2019s best practices. You\u2019ll test your skills by implementing the program yourself.\nOf course, no single book can make you a professional software developer. But Beyond the Basic Stuff with Python will get you further down that path and make you a better programmer in the process as you learn to write readable code that\u2019s easy to debug and perfectly Pythonic.\n"
  },
  {
    "title": "Black Hat Python",
    "author": "Justin Seitz and Tim Arnold",
    "year": "2021",
    "edition": "2nd Edition",
    "full_description": "Look Inside!\n\n   \n\nDownload Chapter 3: Writing a Sniffer\n\nClick here to download all the code and resources for the book.\n\nWhen it comes to creating powerful and effective hacking tools, Python is the language of choice for most security analysts. In this second edition of the bestselling Black Hat Python, you\u2019ll explore the darker side of Python\u2019s capabilities: everything from writing network sniffers, stealing email credentials, and bruteforcing directories to crafting mutation fuzzers, investigating virtual machines, and creating stealthy trojans.\nAll of the code in this edition has been updated to Python 3.x. You\u2019ll also find new coverage of bit shifting, code hygiene, and offensive forensics with the Volatility Framework as well as expanded explanations of the Python libraries ctypes, struct, lxml, and BeautifulSoup, and offensive hacking strategies like splitting bytes, leveraging computer vision libraries, and scraping websites.\nYou\u2019ll learn how to:\n\nCreate a trojan command-and-control server using GitHub\nDetect sandboxing and automate common malware tasks like keylogging and screenshotting\nExtend the Burp Suite web-hacking tool\nEscalate Windows privileges with creative process control\nUse offensive memory forensics tricks to retrieve password hashes and find vulnerabilities on a virtual machine\nAbuse Windows COM automation\nExfiltrate data from a network undetected\n\nWhen it comes to offensive security, you need to be able to create powerful tools on the fly. Learn how with Black Hat Python.\n"
  },
  {
    "title": "Cracking Codes with Python",
    "author": "Al Sweigart",
    "year": "2018",
    "edition": null,
    "full_description": "Download Chapter 2: Programming in the Interactive Shell\nLearn how to program in Python while making and breaking ciphers\u2014algorithms used to create and send secret messages! \nAfter a crash course in Python programming basics, you\u2019ll learn to make, test, and hack programs that encrypt text with classical ciphers like the transposition cipher and Vigen\u00e8re cipher. You\u2019ll begin with simple programs for the reverse and Caesar ciphers and then work your way up to public key cryptography, the type of encryption used to secure today\u2019s online transactions, including digital signatures, email, and Bitcoin.\nEach program includes the full code and a line-by-line explanation of how things work. By the end of the book, you\u2019ll have learned how to code in Python and you\u2019ll have the clever programs to prove it!\nYou\u2019ll also learn how to:\n\nCombine loops, variables, and flow control statements into real working programs\nUse dictionary files to instantly detect whether decrypted messages are valid English or gibberish\nCreate test programs to make sure that your code encrypts and decrypts correctly\nCode (and hack!) a working example of the affine cipher, which uses modular arithmetic to encrypt a message\nBreak ciphers with techniques such as brute-force and frequency analysis\n\nThere\u2019s no better way to learn to code than to play with real programs. Cracking Codes with Python makes the learning fun!\n"
  },
  {
    "title": "Dead Simple Python",
    "author": "Jason C. McDonald",
    "year": "2022",
    "edition": null,
    "full_description": "Download Chapter 5: VARIABLES AND TYPES\nLook Inside!\n\n\nDead Simple Python is a thorough introduction to every feature of the Python language for programmers who are impatient to write production code. Instead of revisiting elementary computer science topics, you\u2019ll dive deep into idiomatic Python patterns so you can write professional Python programs in no time.\nAfter speeding through Python\u2019s basic syntax and setting up a complete programming environment, you\u2019ll learn to work with Python\u2019s dynamic data typing, its support for both functional and object-oriented programming techniques, special features like generator expressions, and advanced topics like concurrency. You\u2019ll also learn how to package, distribute, debug, and test your Python project.\nMaster how to:\n\nMake Python's dynamic typing work for you to produce cleaner, more adaptive code.\nHarness advanced iteration techniques to structure and process your data.\nDesign classes and functions that work without unwanted surprises or arbitrary constraints.\nUse multiple inheritance and introspection to write classes that work intuitively.\nImprove your code's responsiveness and performance with asynchrony, concurrency, and parallelism.\nStructure your Python project for production-grade testing and distribution\n\nThe most pedantically pythonic primer ever printed, Dead Simple Python will take you from working with the absolute basics to coding applications worthy of publication.\n"
  },
  {
    "title": "Dive Into Algorithms",
    "author": "Bradford Tuckfield",
    "year": "2021",
    "edition": null,
    "full_description": "Look Inside!\n\n \nDownload Chapter 2: ALGORITHMS IN HISTORY\n\nDive Into Algorithms is a wide-ranging, Pythonic tour of many of the world's most interesting algorithms. With little more than a bit of computer programming experience and basic high-school math, you'll explore standard computer science algorithms for searching, sorting, and optimization; human-based algorithms that help us determine how to catch a baseball or eat the right amount at a buffet; and advanced algorithms like ones used in machine learning and artificial intelligence. You'll even explore how ancient Egyptians and Russian peasants used algorithms to multiply numbers, how the ancient Greeks used them to find greatest common divisors, and how Japanese scholars in the age of samurai designed algorithms capable of generating magic squares.\nYou'll explore algorithms that are useful in pure mathematics and learn how mathematical ideas can improve algorithms. You'll learn about an algorithm for generating continued fractions, one for quick calculations of square roots, and another for generating seemingly random sets of numbers.\nYou'll also learn how to:\n\nUse algorithms to debug code, maximize revenue, schedule tasks, and create decision trees\nMeasure the efficiency and speed of algorithms\nGenerate Voronoi diagrams for use in various geometric applications\nUse algorithms to build a simple chatbot, win at board games, or solve sudoku puzzles\nWrite code for gradient ascent and descent algorithms that can find the maxima and minima of functions\nUse simulated annealing to perform global optimization\nBuild a decision tree to predict happiness based on a person's characteristics\n\nOnce you've finished this book you'll understand how to code and implement important algorithms as well as how to measure and optimize their performance, all while learning the nitty-gritty details of today's most powerful algorithms.\n"
  },
  {
    "title": "Dive Into Data Science",
    "author": "Bradford Tuckfield",
    "year": "2023",
    "edition": null,
    "full_description": "Look Inside!\n\nDownload Chapter 2: FORECASTING\nDive into the exciting world of data science with this practical introduction. Packed with essential skills and useful examples, Dive Into Data Science will show you how to obtain, analyze, and visualize data so you can leverage its power to solve common business challenges.\nWith only a basic understanding of Python and\u00a0high school math, you\u2019ll be able to effortlessly work\u00a0through the book and start implementing data science\u00a0in your day-to-day work. From improving a bike sharing company to extracting data from websites\u00a0and creating recommendation systems, you\u2019ll discover how to find and use data-driven solutions to make business decisions.\nTopics covered include conducting exploratory data analysis, running A/B tests, performing binary classification using logistic regression models, and using machine learning algorithms.\nYou\u2019ll also learn how to:\n\nForecast consumer demand\u00a0\nOptimize marketing campaigns\nReduce customer attrition\nPredict website traffic\nBuild recommendation systems\n\nWith this practical guide at your fingertips, harness\u00a0the power of programming, mathematical theory, and good old common sense to find data-driven solutions that make a difference. Don\u2019t wait; dive right in!\n"
  },
  {
    "title": "Doing Math with Python",
    "author": "Amit Saha",
    "year": "2015",
    "edition": null,
    "full_description": "\u201cSaha does an excellent job providing a clear link between Python and upper-level math concepts, and demonstrates how Python can be transformed into a mathematical stage. This book deserves a spot on every geometry teacher\u2019s bookshelf.\u201d\n\u2014School Library Journal\n\nDownload Chapter 1: Working with Numbers\nDownload the solutions PDF and code files for the programming challenges\nVisit the author's website for code files and other resources\n\nDoing Math with Python shows you how to use Python to delve into high school\u2013level math topics like statistics, geometry, probability, and calculus. You\u2019ll start with simple projects, like a factoring program and a quadratic-equation solver, and then create more complex projects once you\u2019ve gotten the hang of things. \n\nAlong the way, you\u2019ll discover new ways to explore math and gain valuable programming skills that you\u2019ll use throughout your study of math and computer science. Learn how to:\n\nDescribe your data with statistics, and visualize it with line graphs, bar charts, and scatter plots\nExplore set theory and probability with programs for coin flips, dicing, and other games of chance\nSolve algebra problems using Python\u2019s symbolic math functions\nDraw geometric shapes and explore fractals like the Barnsley fern, the Sierpinski triangle, and the Mandelbrot set\nWrite programs to find derivatives and integrate functions\n\nCreative coding challenges and applied examples help you see how you can put your new math and coding skills into practice. You\u2019ll write an inequality solver, plot gravity\u2019s effect on how far a bullet will travel, shuffle a deck of cards, estimate the area of a circle by throwing 100,000 \u201cdarts\u201d at a board, explore the relationship between the Fibonacci sequence and the golden ratio, and more.\n\nWhether you\u2019re interested in math but have yet to dip into programming or you\u2019re a teacher looking to bring programming into the classroom, you\u2019ll find that Python makes programming easy and practical. Let Python handle the grunt work while you focus on the math.\n\nUses Python 3\n"
  },
  {
    "title": "Gray Hat Python",
    "author": "Justin Seitz",
    "year": "2009",
    "edition": null,
    "full_description": "\nDownload Chapter 2: \"Debuggers and Debugger Design\" and Chapter 4: \"PyDbg: A Pure Python Windows Debugger\"\nDownload the code from the book\n\nPython is fast becoming the programming language of choice for hackers, reverse engineers, and software testers because it's easy to write quickly, and it has the low-level support and libraries that make hackers happy. But until now, there has been no real manual on how to use Python for a variety of hacking tasks. You had to dig through forum posts and man pages, endlessly tweaking your own code to get everything working. Not anymore.\nGray Hat Python explains the concepts behind hacking tools and techniques like debuggers, trojans, fuzzers, and emulators. But author Justin Seitz goes beyond theory, showing you how to harness existing Python-based security tools\u2014and how to build your own when the pre-built ones won't cut it.\nYou'll learn how to:\n\nAutomate tedious reversing and security tasks\nDesign and program your own debugger\nLearn how to fuzz Windows drivers and create powerful fuzzers from scratch\nHave fun with code and library injection, soft and hard hooking techniques, and other software trickery\nSniff secure traffic out of an encrypted web browser session\nUse PyDBG, Immunity Debugger, Sulley, IDAPython, PyEMU, and more\n\nThe world's best hackers are using Python to do their handiwork. Shouldn't you?\n"
  },
  {
    "title": "Hardcore Programming for Mechanical Engineers",
    "author": "Angel Sola Orbaiceta",
    "year": "2021",
    "edition": null,
    "full_description": "Look Inside!\n\n \nDownload Chapter 4: POINTS AND VECTORS\n\nCheck out the book's companion site for important updates and extra material.\n\nWhat if you could solve challenging engineering problems with Python programming? With this book\u2019s hardcore approach, you\u2019ll learn how to code solutions from scratch using linear algebra, geometry, and physics to write custom libraries, draw primitives, and build applications.\n\u00c1ngel Sola Orbaiceta covers core programming techniques for mechanical engineers, with a focus on crafting high-quality code and leveraging automated unit testing for error-free implementations. You\u2019ll develop a geometry toolbox, filling it with lines and shapes to diagram engineering problems; create vector graphics and animations for mechanical simulations; and code algorithms to perform complex calculations. As a capstone you\u2019ll combine these lessons to build a complete structural analysis application to solve a 2D truss problem that you might encounter in the field.\nLearn how to:\n\nUse regular expressions to elegantly parse file input\nRefine your code with unit testing, encapsulation, and descriptive names\nDraw images onscreen and create animations with Tkinter\u2019s Canvas widget\nSolve systems of linear equations using the Cholesky decomposition algorithm\nBuild an application that visualizes a truss structure\u2019s stresses and strains\n\nStop relying on third-party software\u2014there are no shortcuts on the path to proficiency. With Hardcore Programming for Mechanical Engineers, you\u2019ll hone your programming skills to get correct results every time.\n"
  },
  {
    "title": "Impractical Python Projects",
    "author": "Lee Vaughan",
    "year": "2018",
    "edition": null,
    "full_description": "Download Chapter 3: Solving Anagrams\nImpractical Python Projects picks up where the complete beginner books leave off, expanding on existing concepts and introducing new tools that you\u2019ll use every day. And to keep things interesting, each project includes a zany twist featuring historical incidents, pop culture references, and literary allusions.\nYou\u2019ll flex your problem-solving skills and employ Python\u2019s many useful libraries to do things like:\n\nHelp James Bond crack a high-tech safe with a hill-climbing algorithm\nWrite haiku poems using Markov Chain Analysis\nUse genetic algorithms to breed a race of gigantic rats\nCrack the world\u2019s most successful military cipher using cryptanalysis\nFoil corporate security with invisible electronic ink\nDerive the anagram, \u201cI am Lord Voldemort\u201d using linguistical sieves\nPlan your parents\u2019 secure retirement with Monte Carlo simulation\nSave the sorceress Zatanna from a stabby death using palingrams\nModel the Milky Way and calculate our odds of detecting alien civilizations\nHelp the world\u2019s smartest woman win the Monty Hall problem argument\nReveal Jupiter\u2019s Great Red Spot using optical stacking\nSave the head of Mary, Queen of Scots with steganography\n\nSimulate volcanoes, map Mars, and more, all while gaining valuable experience using free modules like Tkinter, matplotlib, Cprofile, Pylint, Pygame, Pillow, and Python-Docx.\nWhether you\u2019re looking to pick up some new Python skills or just need a pick-me-up, you\u2019ll find endless educational, geeky fun with Impractical Python Projects.\n"
  },
  {
    "title": "Invent Your Own Computer Games with Python",
    "author": "Al Sweigart",
    "year": "2016",
    "edition": "4th Edition",
    "full_description": "\nInvent Your Own Computer Games with Python was selected as one of the best books for learning Python by Real Python\n\u201cIt's a great introduction to Python and a great introduction to building fairly simple but interesting games. The author's not just a talented coder, but a Python maestro. And his programming techniques provide good lessons on how to approach programming tasks.\u201d\n\u2014Computerworld\n\u201cGames are a great way to engage kids, and Python is a perfect language for them to see immediate results on the screen as they code. Invent Your Own Computer Games with Python should be a hit.\u201d\n\u2014GeekDad\n\nInvent Your Own Computer Games with Python will teach you how to make computer games using the popular Python programming language\u2014even if you\u2019ve never programmed before!\nBegin by building classic games like Hangman, Guess the Number, and Tic-Tac-Toe, and then work your way up to more advanced games, like a text-based treasure hunting game and an animated collision-dodging game with sound effects. Along the way, you\u2019ll learn key programming and math concepts that will help you take your game programming to the next level.\n\nLearn how to: \n\nCombine loops, variables, and flow control statements into real working programs\nChoose the right data structures for the job, such as lists, dictionaries, and tuples\nAdd graphics and animation to your games with the pygame module\nHandle keyboard and mouse input\nProgram simple artificial intelligence so you can play against the computer\nUse cryptography to convert text messages into secret code\nDebug your programs and find common errors\n\nAs you work through each game, you\u2019ll build a solid foundation in Python and an understanding of computer science fundamentals.\nWhat new game will you create with the power of Python?\nThe projects in this book are compatible with Python 3.\n"
  },
  {
    "title": "Learn Python Visually",
    "author": "Tristan Bunn",
    "year": "2021",
    "edition": null,
    "full_description": "Look Inside!\n\n  \n\nDownload Chapter 9: FUNCTIONS AND PERIODIC MOTION\n\nThe perfect book for first-time programmers, Learn Python Visually introduces the fundamentals of computer coding within a visual, graphics-based context. Tristan Bunn\u2019s creative teaching approach will help you visualize core programming concepts as you make cool pictures, animations, and simulations using Python Mode for the open source Processing development environment.\nFrom the very first chapter, you\u2019ll produce and manipulate colorful designs as Bunn walks you through a series of easy-to-follow graphical coding projects that grow increasingly complex. You\u2019ll progress from drawing with code to animating a bouncing DVD screensaver to creating interactive programs. Along the way, you\u2019ll encounter skill-building challenges on topics as diverse as video games, coffee, fine art, amoebas, and Pink Floyd.\nYou\u2019ll learn how to:\n\nApply basic coding theories and concepts, like variables, data types, pixel coordinates, control flow, and algorithms\nWrite code that produces drawings, patterns, animations, data visualizations, user interfaces, and simulations\nUse code to explore randomness, handle CSV and JSON data, and generate animations that employ trigonometry for periodic motion and Lissajous curves\nDefine functions, reduce repetition, and make your code more modular\nWrite classes and create objects to structure code more efficiently\n\nIf you\u2019ve ever dreamed of coding for data visualizations, computer-generated art, games, or other creative technologies, Learn Python Visually is the entry point you need.\n"
  },
  {
    "title": "Learn to Code by Solving Problems",
    "author": "Daniel Zingaro",
    "year": "2021",
    "edition": null,
    "full_description": "Look Inside!\n\n\n\nDownload Chapter 2: MAKING DECISIONS\nSupplementary resources for the book, including downloadable code and additional exercises available here.\nComputers are capable of solving almost any problem when given the right instructions. That\u2019s where programming comes in. This beginner\u2019s book will have you writing Python programs right away. You\u2019ll solve interesting problems drawn from real coding competitions and build your programming skills as you go.\nEvery chapter presents problems from coding challenge websites, where online judges test your solutions and provide targeted feedback. As you practice using core Python features, functions, and techniques, you\u2019ll develop a clear understanding of data structures, algorithms, and other programming basics. Bonus exercises invite you to explore new concepts on your own, and multiple-choice questions encourage you to think about how each piece of code works.\nYou\u2019ll learn how to:\n\nRun Python code, work with strings, and use variables\nWrite programs that make decisions\nMake code more efficient with while and for loops\nUse Python sets, lists, and dictionaries to organize, sort, and search data\nDesign programs using functions and top-down design\nCreate complete-search algorithms and use Big O notation to design more efficient code\n\nBy the end of the book, you\u2019ll not only be proficient in Python, but you\u2019ll also understand how to think through problems and tackle them with code. Programming languages come and go, but this book gives you the lasting foundation you need to start thinking like a programmer.\n"
  },
  {
    "title": "Learn to Program with Minecraft",
    "author": "Craig Richardson",
    "year": "2015",
    "edition": null,
    "full_description": "\u201cLearn to Program With Minecraft is 297 pages brimming with potential. It\u2019s an excellent guide for Minecraft players wanting to expand their capabilities in the game and with programming. Highly recommended.\"\n\u2014GeekDad\n\u201cLearn to Program with Minecraft offers an incredibly user-friendly, intuitive, and innovative approach for learning the Python programming language.\u201d\n\u2014EE Times\n\n\nDownload Chapter 1: Setting Up for Your Adventure\nDownload Chapter 7: Dance Parties and Flower Parades with while Loops\nDownload the setup files for Windows (Minecraft Tools.zip)\n\nDownload the setup files for Mac OS (Minecraft Tools Mac.zip)\nDownload the code used in the book and solutions to the Minecraft Missions\nTroubleshooting\n\n\n\nYou\u2019ve bested creepers, traveled deep into caves, and maybe even gone to The End and back\u2014but have you ever transformed a sword into a magic wand? Built a palace in the blink of an eye? Designed your own color-changing disco dance floor? \nIn Learn to Program with Minecraft\u00ae, you\u2019ll do all this and more with the power of Python, a free language used by millions of professional and first-time programmers!\nBegin with some short, simple Python lessons and then use your new skills to modify Minecraft to produce instant and totally awesome results. Learn how to customize Minecraft to make mini-games, duplicate entire buildings, and turn boring blocks into gold. \nYou\u2019ll also write programs that:\n\nTake you on an automated teleportation tour around your Minecraft world\nBuild massive monuments, pyramids, forests, and more in a snap!\nMake secret passageways that open when you activate a hidden switch\nCreate a spooky ghost town that vanishes and reappears elsewhere\nShow exactly where to dig for rare blocks\nCast a spell so that a cascade of flowers (or dynamite if you\u2019re daring!) follows your every move\nMake mischief with dastardly lava traps and watery curses that cause huge floods\n\nWhether you\u2019re a Minecraft megafan or a newbie, you\u2019ll see Minecraft in a whole new light while learning the basics of programming. Sure, you could spend all day mining for precious resources or building your mansion by hand, but with the power of Python, those days are over!\n\nRequires: Minecraft Java Edition; Windows 7 or later; OS X 10.10 or later; or a Raspberry Pi.\nClick here for details about system requirements.\n\nUses Python 3\n"
  },
  {
    "title": "Make Python Talk",
    "author": "Mark Liu",
    "year": "2021",
    "edition": null,
    "full_description": "Download Chapter 5: SPEAKING APPLICATIONS\nClick here to download the code files used in the book.\nClick here to visit the book's github repository to download code and access errata reports.\nThis fun, hands-on book will take your basic Python skills to the next level as you build voice-controlled apps to use in your daily life. Starting with a Python refresher and an introduction to speech-recognition/text-to-speech functionalities, you\u2019ll soon ease into more advanced topics, like making your own modules and building working voice-controlled apps.\nEach chapter scaffolds multiple projects that allow you to see real results from your code at a manageable pace, while end-of-chapter exercises strengthen your understanding of new concepts. You\u2019ll design interactive games, like Connect Four and Tic-Tac-Toe, and create intelligent computer opponents that talk and take commands; you\u2019ll make a real-time language translator, and create voice-activated financial-market apps that track the stocks or cryptocurrencies you are interested in. Finally, you\u2019ll load all of these features into the ultimate virtual personal assistant \u2013 a conversational VPA that tells jokes, reads the news, and gives you hands-free control of your email, browser, music player, desktop files, and more.\nAlong the way, you\u2019ll learn how to:\n\nBuild Python modules, implement animations, and integrate live data into an app\nUse web-scraping skills for voice-controlling podcasts, videos, and web searches\nFine-tune the speech recognition to accept a variety of input\nAssociate regular tasks like opening files and accessing the web with speech commands\nIntegrate functionality from other programs into a single VPA with computational knowledge engines to answer almost any question\n\nPacked with cross-platform code examples to download, practice activities and exercises, and explainer images, you\u2019ll quickly become proficient in Python coding in general and speech recognition/text to speech in particular.\n"
  },
  {
    "title": "Math Adventures with Python",
    "author": "Peter Farrell",
    "year": "2019",
    "edition": null,
    "full_description": "Download Chapter 5: Transforming Shapes with Geometry\nDownload the code.\nDownload solutions to exercises.\nMath Adventures with Python will show you how to harness the power of programming to keep math relevant and fun. With the aid of the Python programming language, you\u2019ll learn how to visualize solutions to a range of math problems as you use code to explore key mathematical concepts like algebra, trigonometry, matrices, and cellular automata.\nOnce you\u2019ve learned the programming basics like loops and variables, you\u2019ll write your own programs to solve equations quickly, make cool things like an interactive rainbow grid, and automate tedious tasks like factoring numbers and finding square roots. You\u2019ll learn how to write functions to draw and manipulate shapes, create oscillating sine waves, and solve equations graphically. \nYou\u2019ll also learn how to: \n\nDraw and transform 2D and 3D graphics with matrices\nMake colorful designs like the Mandelbrot and Julia sets with complex numbers\nUse recursion to create fractals like the Koch snowflake and the Sierpinski triangle\nGenerate virtual sheep that graze on grass and multiply autonomously\nCrack secret codes using genetic algorithms\n\n\nAs you work through the book\u2019s numerous examples and increasingly challenging exercises, you\u2019ll code your own solutions, create beautiful visualizations, and see just how much more fun math can be!\n"
  },
  {
    "title": "Mission Python",
    "author": "Sean McManus",
    "year": "2018",
    "edition": null,
    "full_description": "Download Chapter 1: Your First Spacewalk\nDownload the full code, images, and sound effects for the game here\nClick here for a list of errata and updates (author site)\nLaunch into coding with Mission Python, a space-themed guide to building a complete computer game in Python. You'll learn programming fundamentals like loops, strings, and lists as you build Escape!, an exciting game with a map to explore, items to collect, and tricky logic puzzles to solve. As you work through the book, you'll build exercises and mini-projects, like making a spacewalk simulator and creating an astronaut's safety checklist that will put your new Python skills to the test. \nYou'll learn how to use Pygame Zero, a free resource that lets you add graphics and sound effects to your creations, and you'll get useful game-making tips, such as how to design fun puzzles and intriguing maps. Before you know it, you'll have a working, awesome game to stump your friends with (and some nifty coding skills, too!). You can follow this book using a Raspberry Pi or a Microsoft Windows PC, and the 3D graphics and sound effects you need are provided as a download.\n \nTake a look inside!\n\n\n\n\n\n\n"
  },
  {
    "title": "Modeling and Simulation in Python",
    "author": "Allen B. Downey",
    "year": "2023",
    "edition": null,
    "full_description": "Download Chapter 11: EPIDEMIOLOGY AND SIR MODELS\nLook Inside!\n\n\nModeling and Simulation in Python is a thorough but easy-to-follow introduction to physical modeling\u2014that is, the art of describing and simulating real-world systems. \nReaders are guided through modeling things like world population growth, infectious disease, bungee jumping, baseball flight trajectories, celestial mechanics, and more while simultaneously developing a strong understanding of fundamental programming concepts like loops, vectors, and functions.\nClear and concise, with a focus on learning by doing, the author spares the reader abstract, theoretical complexities and gets right to hands-on examples that show how to produce useful models and simulations.\n"
  },
  {
    "title": "Natural Language Processing with Python and spaCy",
    "author": "Yuli Vasiliev",
    "year": "2020",
    "edition": null,
    "full_description": "Look Inside!\n\n\n\n\nDownload Chapter 2: The Text-Processing Pipeline (PDF)\nDownload the source code from GitHub\n\n\nNatural Language Processing with Python and spaCy will show you how to create NLP applications like chatbots, text-condensing scripts, and order-processing tools quickly and easily. You\u2019ll learn how to leverage the spaCy library to extract meaning from text intelligently; how to determine the relationships between words in a sentence (syntactic dependency parsing); identify nouns, verbs, and other parts of speech (part-of-speech tagging); and sort proper nouns into categories like people, organizations, and locations (named entity recognizing). You\u2019ll even learn how to transform statements into questions to keep a conversation going.\nYou\u2019ll also learn how to: \n\n Work with word vectors to mathematically find words with similar meanings (Chapter 5)\n Identify patterns within data using spaCy's built-in displaCy visualizer (Chapter 7)\n Automatically extract keywords from user input and store them in a relational database (Chapter 9)\n Deploy a chatbot app to interact with users over the internet (Chapter 11)\n\n\n\u201cTry This\u201d sections in each chapter encourage you to practice what you\u2019ve learned by expanding the book\u2019s example scripts to handle a wider range of inputs, add error handling, and build professional-quality applications.\nBy the end of the book, you\u2019ll be creating your own NLP applications with Python and spaCy.\n\nCheck out this video where the author discusses how to extract chatbot user input with Python and spaCy.\n\n"
  },
  {
    "title": "Object-Oriented Python",
    "author": "Irv Kalb",
    "year": "2021",
    "edition": null,
    "full_description": "Look Inside!\n \n\nDownload Chapter 2: MODELING PHYSICAL OBJECTS...\n\nClick here to download the book's code and resources.\nClick here to visit the book's github repository.\n Object-Oriented Programming (OOP) is a paradigm that combines data and code into cohesive units, allowing you to think differently about computational problems and solve them in a highly reusable way. Aimed at intermediate-level programmers, Object-Oriented Python is a hands-on tutorial that goes deep into the core tenets of OOP, showing you how to use encapsulation, polymorphism, and inheritance to write games and apps using Python.\nThe book begins by demonstrating key problems inherent in procedural programming, then guides you through the basics of creating classes and objects in Python. You\u2019ll build on this groundwork by developing buttons, text fields, and other GUI elements that are standard in event-driven environments. You\u2019ll also use many real-world code examples and two pygame-based packages to help turn theory into practice, enabling you to easily write interactive games and applications complete with GUI widgets, animations, multiple scenes, and reusable game logic. In the final chapter, you\u2019ll bring it all together by building a fully functional video game that incorporates many of the OOP techniques and GUI elements covered in the book.\nYou\u2019ll learn how to:\n\nCreate and manage multiple objects using an object manager object\nUse encapsulation to hide the inner details of objects from client code\nUse polymorphism to define one interface and implement it in multiple classes\nApply inheritance to build on existing code\n\nObject-Oriented Python is a visual, intuitive guide to fully understanding how OOP operates and how you can use it to make your code more maintainable, readable, and efficient\u2014without sacrificing functionality.\n"
  },
  {
    "title": "Practical Deep Learning",
    "author": "Ronald T. Kneusel",
    "year": "2021",
    "edition": null,
    "full_description": "Look Inside!\n   \nDownload Chapter 4: WORKING WITH DATA\nYou can find the book's code files and latest updates on GitHub. \nIf you\u2019ve been curious about artificial intelligence and machine learning but didn\u2019t know where to start, this is the book you\u2019ve been waiting for. Focusing on the subfield of machine learning known as deep learning, it explains core concepts and gives you the foundation you need to start building your own models. Rather than simply outlining recipes for using existing toolkits, Practical Deep Learning teaches you the why of deep learning and will inspire you to explore further.\nAll you need is basic familiarity with computer programming and high school math\u2014the book will cover the rest. After an introduction to Python, you\u2019ll move through key topics like how to build a good training dataset, work with the scikit-learn and Keras libraries, and evaluate your models\u2019 performance.\nYou\u2019ll also learn:\n\nHow to use classic machine learning models like k-Nearest Neighbors, Random Forests, and Support Vector Machines\nHow neural networks work and how they\u2019re trained\nHow to use convolutional neural networks\nHow to develop a successful deep learning model from scratch\n\nYou\u2019ll conduct experiments along the way, building to a final case study that incorporates everything you\u2019ve learned. All of the code you\u2019ll use is available here: https://github.com/rkneusel9/PracticalDeepLearningPython/\nThe perfect introduction to this dynamic, ever-expanding field, Practical Deep Learning will give you the skills and confidence to dive into your own machine learning projects.\n"
  },
  {
    "title": "Python Crash Course",
    "author": "Eric Matthes",
    "year": "2022",
    "edition": "3rd Edition",
    "full_description": "Read a Q&A with Eric Matthes\nDownload Chapter 2: VARIABLES AND SIMPLE DATA TYPES\nLook Inside!\n \nPython Crash Course is the world\u2019s best-selling guide to the Python programming language. This fast-paced, thorough introduction will have you writing programs, solving problems, and developing functioning applications in no time.\nYou\u2019ll start by learning basic programming concepts, such as variables, lists, classes, and loops, and practice writing clean code with exercises for each topic. You\u2019ll also learn how to make your programs interactive and test your code safely before adding it to a project. You\u2019ll put your new knowledge into practice by creating a Space Invaders\u2013inspired arcade game, building a set of data visualizations with Python\u2019s handy libraries, and deploying a simple application online.\nAs you work through the book, you\u2019ll learn how to:\n\nUse powerful Python libraries and tools, including pytest, Pygame, Matplotlib, Plotly, and Django\nMake increasingly complex 2D games that respond to keypresses and mouse clicks\nGenerate interactive data visualizations using a variety of datasets\nBuild apps that allow users to create accounts and manage their own data, and deploy your apps online\nTroubleshoot coding errors and solve common programming problems\n\nNew to this edition: This third edition is completely revised to reflect the latest in Python code. New and updated coverage includes VS Code for text editing, the pathlib module for file handling, pytest for testing your code, as well as the latest features of Matplotlib, Plotly, and Django.\nIf you\u2019ve been thinking about digging into programming, Python Crash Course will provide you with the skills to write real programs fast. Why wait any longer? Start your engines and code!\n \n"
  },
  {
    "title": "Python Flash Cards",
    "author": "Eric Matthes",
    "year": "2019",
    "edition": null,
    "full_description": "\nLook Inside!\n\n\n\nFeatured on ElectronicsWeekly.com.\nKeep your coding skills sharp on the go! Python Flash Cards take a tried-and-tested method and give it a programming makeover. Eric Matthes, author of the best-selling Python Crash Course, distills essential Python programming knowledge into this 101-card deck you can use anywhere.\nWork through the deck in order or shuffle it up for a new study session every time. You can brush up foundational programming principles and vocabulary like data structures, logical control, and program flow, quiz yourself on Python syntax, and test your skills against exercises and challenges designed to keep you on your toes \u2014 all in one sitting.\nDon't let your Python training stop at the keyboard. With Python Flash Cards, the power of Python fits in your pocket.\n"
  },
  {
    "title": "Python for Data Science",
    "author": "Yuli Vasiliev",
    "year": "2022",
    "edition": null,
    "full_description": "Look Inside!\n\n\nDownload Chapter 9: ANALYZING LOCATION DATA\n\u00a0\nPython is an ideal choice for accessing, manipulating, and gaining insights from data of all kinds. Python for Data Science introduces you to the Pythonic world of data analysis with a learn-by-doing approach rooted in practical examples and hands-on activities. You\u2019ll learn how to write Python code to obtain, transform, and analyze data, practicing state-of-the-art data processing techniques for use cases in business management, marketing, and decision support.\nYou will discover Python\u2019s rich set of built-in data structures for basic operations, as well as its robust ecosystem of open-source libraries for data science, including NumPy, pandas, scikit-learn, matplotlib, and more. Examples show how to load data in various formats, how to streamline, group, and aggregate data sets, and how to create charts, maps, and other visualizations. Later chapters go in-depth with demonstrations of real-world data applications, including using location data to power a taxi service, market basket analysis to identify items commonly purchased together, and machine learning to predict stock prices.\n"
  },
  {
    "title": "Python for Excel Power Users",
    "author": "Tracy Stephens",
    "year": "2025",
    "edition": null,
    "full_description": "Excel is a mainstay of the modern workplace, but it isn\u2019t always the best tool for the job. Python for Excel Power Users offers a better way, showing how Python and other coding tools can boost your productivity by streamlining your workflow. Even if you\u2019re inexperienced at programming, you are not starting from scratch\u2014this book leverages what you already know in Excel to introduce you to useful Python concepts that will have you up and coding in no time. Beyond Python, you\u2019ll learn skills such as:\n\nManaging and querying database data using SQL\nObtaining data from external sources through API calls\nDeveloping basic web pages with HTML\nCreating attractive dashboards and reports with Dash\nCollaborating with others and tracking how projects evolve using Git\n\nPractical examples illustrate how your new coding skills can be immediately applied to your day-to-day work. You\u2019ll be amazed at how much more you can do once you escape the confines of the spreadsheet and replace Excel in your workflow.\n"
  },
  {
    "title": "Python for Kids",
    "author": "Jason R. Briggs",
    "year": "2022",
    "edition": "2nd Edition",
    "full_description": "Download Chapter 8: HOW TO USE CLASSES AND OBJECTS\nLook Inside!\n\nPython is a powerful programming language that\u2019s easy to learn and fun to use! But books about programming in Python can be dull and that\u2019s no fun for anyone.\nPython for Kids brings kids (and their parents) into the wonderful world of programming. Jason R. Briggs guides you through the basics, experimenting with unique (and hilarious) example programs featuring ravenous monsters, secret agents, thieving ravens, and more. New terms are defined; code is colored and explained; puzzles stretch the brain and strengthen understanding; and full-color illustrations keep you engaged throughout.\u00a0\nBy the end of the book, you\u2019ll have programmed two games: a clone of the famous Pong, and \u201cMr. Stick Man Races\u00a0for the Exit\u201d\u2014a platform game with jumps and animation.\nThis second edition is revised and updated to reflect Python 3 programming practices. There are new puzzles to inspire you and two new appendices to guide you through Python\u2019s built-in modules and troubleshooting your code.\nAs you strike out on your programming adventure, you\u2019ll learn how to:\n\nUse fundamental data structures like lists, tuples, and dictionaries \u00a0\nOrganize and reuse your code with functions and modules\nUse control structures like loops and conditional statements\u00a0\nDraw shapes and patterns with Python\u2019s turtle module\nCreate games, animations, and other graphical wonders with tkinter\n\nWhy should serious adults have all the fun? Python for Kids is your ticket into the amazing world of computer programming.\nCovers Python 3.x which runs on Windows, macOS, Linux, even Raspberry Pi\n"
  },
  {
    "title": "Python One-Liners",
    "author": "Christian Mayer",
    "year": "2020",
    "edition": null,
    "full_description": "Look Inside!\n\n\n\n\n\nDownload Chapter 2: PYTHON TRICKS (PDF)\nDownload Python One-Liners cheat sheets (PDF)\nPlease visit the book's companion site for cheat sheets and video tutorials.\nDownload executable files here.\n\n\nPython One-Liners will teach you how to read and write \u201cone-liners\u201d: concise statements of useful functionality packed into a single line of code. You'll learn how to systematically unpack and understand any line of Python code, and write eloquent, powerfully compressed Python like an expert. \nThe book\u2019s five chapters cover tips and tricks, regular expressions, machine learning, core data science topics, and useful algorithms. Detailed explanations of one-liners introduce key computer science concepts and boost your coding and analytical skills.\nYou'll learn about advanced Python features such as list comprehension, slicing, lambda functions, regular expressions, map and reduce functions, and slice assignments.\nYou\u2019ll also learn how to:\n\n Leverage data structures to solve real-world problems, like using Boolean indexing to find cities with above-average pollution\n Use NumPy basics such as array, shape, axis, type, broadcasting, advanced indexing, slicing, sorting, searching, aggregating, and statistics\n Calculate basic statistics of multidimensional data arrays and the K-Means algorithms for unsupervised learning\n Create more advanced regular expressions using grouping and named groups, negative lookaheads, escaped characters, whitespaces, character sets (and negative characters sets), and greedy/nongreedy operators\n Understand a wide range of computer science topics, including anagrams, palindromes, supersets, permutations, factorials, prime numbers, Fibonacci numbers, obfuscation, searching, and algorithmic sorting\n\nBy the end of the book, you\u2019ll know how to write Python at its most refined, and create concise, beautiful pieces of \"Python art\" in merely a single line.\n"
  },
  {
    "title": "Python Playground",
    "author": "Mahesh Venkitachalam",
    "year": "2023",
    "edition": "2nd Edition",
    "full_description": "Download Chapter 1: THE KOCH SNOWFL AKE\nLook Inside!\n\nHarness the power of Python as you turn code into tangible creations with Python Playground, a collection of 15 inventive projects that will expand your programming horizons, spark your curiosity, and elevate your coding skills.\nGo beyond the basics as you write programs to generate art and music, simulate real-world phenomena, and interact with hardware, all through the use of Python and common libraries such as numpy, matplotlib, and Pillow.\nAs you work through the book\u2019s projects, you will:\n\nCraft intricate Spirograph-like designs with parametric equations and the turtle module\nGenerate music by synthesizing plucked string sounds\nTransform everyday images into ASCII art, photomosaics, and eye-popping autostereograms\nDesign engaging cellular automata and flocking simulations\nExplore the realm of 3D graphics, from basic shape rendering to visualizing MRI scan data\nBuild a Raspberry Pi\u2013powered laser show that dances along with music\n\nNew to this edition: We\u2019ve expanded your playground with five new projects: you\u2019ll draw fractals, bring Conway\u2019s Game of Life into 3D space, and use a Raspberry Pi and Python to create a musical instrument, an IoT garden monitor, and even a machine learning\u2013driven speech recognition system.\nWhether you\u2019re a seasoned professional or just getting started, you\u2019ll find Python Playground to be a great way to learn, experiment with, and master this versatile programming language.\n"
  },
  {
    "title": "Python Tools for Scientists",
    "author": "Lee Vaughan",
    "year": "2022",
    "edition": null,
    "full_description": "Download Chapter 16: THE INFOVIS, SCIVIS, AND DASHBOARDING LIBRARIES\nLook Inside!\n\n\nPython Tools for Scientists will introduce you to Python tools you can use in your scientific research, including Anaconda, Spyder, Jupyter Notebooks, JupyterLab, and numerous Python libraries. You\u2019ll learn to use Python for tasks such as creating visualizations, representing geospatial information, simulating natural events, and manipulating numerical data.\nOnce you\u2019ve built an optimal programming environment with Anaconda, you\u2019ll learn how to organize your projects and use interpreters, text editors, notebooks, and development environments to work with your code. Following the book\u2019s fast-paced Python primer, you\u2019ll tour a range of scientific tools and libraries like scikit-learn and seaborn that you can use to manipulate and visualize your data, or analyze it with machine learning algorithms.\nYou\u2019ll also learn how to:\n\nCreate isolated projects in virtual environments, build interactive notebooks, test code in the Qt console, and use Spyder\u2019s interactive development features\nUse Python\u2019s built-in data types, write custom functions and classes, and document your code\nRepresent data with the essential NumPy, Matplotlib, and pandas libraries\nUse Python plotting libraries like Plotly, HoloViews, and Datashader to handle large datasets and create 3D visualizations\n\nRegardless of your scientific field, Python Tools for Scientists will show you how to choose the best tools to meet your research and computational analysis needs.\n"
  },
  {
    "title": "Real-World Python",
    "author": "Lee Vaughan",
    "year": "2020",
    "edition": null,
    "full_description": "Look Inside!\n\n\n\n\nDownload Chapter 2: ATTRIBUTING AUTHORSHIP WITH STYLOMETRY\nYou can find code files and solutions to the book's programs at its GitHub page.\nPROGRAM PYTHON LIKE A PROFESSIONAL\nWith its emphasis on project-based practice, Real World Python will take you from playing with syntax to writing complete programs in no time. You\u2019ll conduct experiments, explore statistical concepts, and solve novel problems that have frustrated geniuses throughout history, like detecting distant exoplanets, as you continue to build your Python skills.\nChapters begin with a clearly defined project goal and a discussion of ways to attack the problem, followed by a mission designed to make you think like a programmer. You\u2019ll direct a Coast Guard search-and-rescue effort, plot and execute a NASA flight to the moon, protect access to a secure lab using facial recognition, and more. Along the way you\u2019ll learn how to:\n\nUse libraries like matplotlib, NumPy, Bokeh, pandas, Requests, Beautiful Soup, and turtle\nWork with Natural Language Processing and computer vision modules like NLTK and OpenCV\nWrite a program to detect and track objects moving across a starfield\nScrape speeches from the internet and autosummarize them\nUse the Mars Orbiter Laser Altimeter (MOLA) map to select spacecraft landing sites\nSurvive a zombie apocalypse with the aid of data-plotting and visualization tools\n\nThe book\u2019s programs are beginner-friendly, but as you progress you\u2019ll learn more sophisticated techniques to help you grow your coding capabilities. Once your missions are accomplished, you\u2019ll be ready to solve real-world problems with Python on your own.\n"
  },
  {
    "title": "Serious Python",
    "author": "Julien Danjou",
    "year": "2018",
    "edition": null,
    "full_description": "\"Serious Python contains a considerable amount of judicious battle-tested advice from an experienced developer\u2014as well as some insightful gems from the guest contributors\u2014making the overall effort a welcome addition to the limited number of books aimed at more advanced Python programmers.\"\n\u2014Michael J. Ross, web developer and former Slashdot contributor.\nDownload Chapter 6: Unit Testing\nSharpen your Python skills as you dive deep into the Python programming language with Serious Python. You\u2019ll cover a range of advanced topics like multithreading and memorization, get advice from experts on things like designing APIs and dealing with databases, and learn Python internals to help you gain a deeper understanding of the language itself. Written for developers and experienced programmers, Serious Python brings together over 15 years of Python experience to teach you how to avoid common mistakes, write code more efficiently, and build better programs in less time. \nAs you make your way through the book\u2019s extensive tutorials, you\u2019ll learn how to start a project and tackle topics like versioning, layouts, coding style, and automated checks. You\u2019ll learn how to package your software for distribution, optimize performance, use the right data structures, define functions efficiently, pick the right libraries, build future-proof programs, and optimize your programs down to the bytecode. \nYou\u2019ll also learn how to: \n\nMake and use effective decorators and methods, including abstract, static, and class methods\nEmploy Python for functional programming using generators, pure functions, and functional functions\nExtend flake8 to work with the abstract syntax tree (AST) to introduce more sophisticated automatic checks into your programs\nApply dynamic performance analysis to identify bottlenecks in your code\nWork with relational databases and effectively manage and stream data with PostgreSQL\n\nIf you\u2019ve been looking for a way to take your Python skills from good to great, Serious Python will help you get there. Learn from the experts and get seriously good at Python with Serious Python!\n"
  },
  {
    "title": "Teach Your Kids to Code",
    "author": "Bryson Payne",
    "year": "2015",
    "edition": null,
    "full_description": "Bryson Payne and Teach Your Kids to Code are featured in The Wall Street Journal!\nTeach Your Kids Kids to Code was selected as one of the best books for learning Python by Real Python\n\u201cA straightforward, crystal-clear guide to programming in Python...Sophisticated concepts and serious programming make for an easy, enjoyable game for families.\u201d\n\u2014Kirkus Reviews\n\u201cAn easy five stars...With the information provided in Teach Your Kids to Code, kids (and adults) will have a solid foundation from which to jump to more advanced programming books.\u201d\n\u2014James Floyd Kelly, GeekDad\n\u201cKid coders who have mastered the likes of Scratch, or older students who are math inclined and want to learn how to code, will find a worthy choice in Payne\u2019s guide to Python programming.\u201d\n\u2014School Library Journal\nListen to Bryson Payne's interview with A Closer Look on WABE, Atlanta's NPR station, and check out why the book was nominated for the opensource.com 2015 summer reading list.\nBryson Payne's Udemy course is now available! Register with coupon code NOSTARCH27 and follow along with lessons from Teach Your Kids to Code.\n\nDownload Chapter 6: Random Fun and Games! (PDF)\nDownload \"Installing Pygame for Python 3 on Mac and Linux\" (PDF)\nDownload the code files and solutions to programming challenges\n\n\nLook Inside!\n\n\n\nTeach Your Kids to Code is a parent's and teacher's guide to teaching kids basic programming and problem solving using Python, the powerful language used in college courses and by tech companies like Google and IBM.\n\nStep-by-step explanations will have kids learning computational thinking right away, while visual and game-oriented examples hold their attention. Friendly introductions to fundamental programming concepts such as variables, loops, and functions will help even the youngest programmers build the skills they need to make their own cool games and applications.\n\nWhether you've been coding for years or have never programmed anything at all, Teach Your Kids to Code will help you show your young programmer how to:\n\nExplore geometry by drawing colorful shapes with Turtle graphics\nWrite programs to encode and decode messages, play Rock-Paper-Scissors, and calculate how tall someone is in Ping-Pong balls\nCreate fun, playable games like War, Yahtzee, and Pong\nAdd interactivity, animation, and sound to their apps\n\n\nTeach Your Kids to Code is the perfect companion to any introductory programming class or after-school meet-up, or simply your educational efforts at home. Spend some fun, productive afternoons at the computer with your kids\u2014you can all learn something!\n"
  },
  {
    "title": "The Art of Clean Code",
    "author": "Christian Mayer",
    "year": "2022",
    "edition": null,
    "full_description": "Download Chapter 2: THE 80/20 PRINCIPLE\nLook Inside!\n\n\n\u00a0\nMost software developers waste thousands of hours working with overly complex code. The eight core principles in The Art of Clean Code will teach you how to write clear, maintainable code without compromising functionality. The book\u2019s guiding principle is simplicity: reduce and simplify, then reinvest energy in the important parts to save you countless hours and ease the often onerous task of code maintenance.\nBestselling author Christian Mayer leverages his experience helping thousands perfect their coding skills in this new book. With expert advice and real-world examples, he\u2019ll show you how to:\n\nConcentrate on the important stuff with the 80/20 principle \u2014 focus on the 20% of your code that matters most\nAvoid coding in isolation: create a minimum viable product to get early feedback\n Write code cleanly and simply to eliminate clutter\nAvoid premature optimization that risks over-complicating code\nBalance your goals, capacity, and feedback to achieve the productive state of Flow\nApply the Do One Thing Well philosophy to vastly improve functionality\nDesign efficient user interfaces with the Less is More principle\nTie your new skills together into one unifying principle: Focus\n\nThis Python-based guide is suitable for programmers at any level, with ideas presented in a language-agnostic manner.\n"
  },
  {
    "title": "The Big Book of Small Python Projects",
    "author": "Al Sweigart",
    "year": "2021",
    "edition": null,
    "full_description": "Look Inside!\n\n \nDownload Chapter 11: CLICKBAIT HEADLINE GENERATOR\n\n\nDownload the resource files used in the book\n\nIf you\u2019ve mastered basic Python syntax and you\u2019re ready to start writing programs, you\u2019ll find The Big Book of Small Python Projects both enlightening and fun. This collection of 81 Python projects will have you making digital art, games, animations, counting pro- grams, and more right away. Once you see how the code works, you\u2019ll practice re-creating the programs and experiment by adding your own custom touches.\nThese simple, text-based programs are 256 lines of code or less. And whether it\u2019s a vintage screensaver, a snail-racing game, a clickbait headline generator, or animated strands of DNA, each project is designed to be self-contained so you can easily share it online.\nYou\u2019ll create:\n\nHangman, Blackjack, and other games to play against your friends or the computer\nSimulations of a forest fire, a million dice rolls, and a Japanese abacus\nAnimations like a virtual fish tank, a rotating cube, and a bouncing DVD logo screensaver\nA first-person 3D maze game\nEncryption programs that use ciphers like ROT13 and Vigen\u00e8re to conceal text\n\nIf you\u2019re tired of standard step-by-step tutorials, you\u2019ll love the learn-by-doing approach of The Big Book of Small Python Projects. It\u2019s proof that good things come in small programs!\n"
  },
  {
    "title": "The Book of Dash",
    "author": "Adam Schroeder, Christian Mayer, and Ann Marie Ward",
    "year": "2022",
    "edition": null,
    "full_description": "Download Chapter 4: FIRST DASH APP\nLook Inside!\n\n\nA swift and practical introduction to building interactive data visualization apps in Python, known as dashboards. You\u2019ve seen dashboards before; think election result visualizations you can update in real time, or population maps you can filter by demographic. With the Python Dash library you\u2019ll create analytic dashboards that present data in effective, usable, elegant ways in just a few lines of code.\nThe book is fast-paced and caters to those entirely new to dashboards. It will talk you through the necessary software, then get straight into building the dashboards themselves. You\u2019ll learn the basic format of a Dash app by building a twitter analysis dashboard that maps the number of likes certain accounts gained over time. You\u2019ll build up skills through three more sophisticated projects. The first is a global analysis app that compares country data in three areas: the percentage of a population using the internet, percentage of parliament seats held by women, and CO2 emissions. You\u2019ll then build an investment portfolio dashboard, and an app that allows you to visualize and explore machine learning algorithms.\nIn this book you will:\n\nCreate and run your first Dash apps\nUse the pandas library to manipulate and analyze social media data\nUse Git to download and build on existing apps written by the pros\nVisualize machine learning models in your apps\nCreate and manipulate statistical and scientific charts and maps using Plotly\n\nDash combines several technologies to get you building dashboards quickly and efficiently. This book will do the same.\n"
  },
  {
    "title": "The Recursive Book of Recursion",
    "author": "Al Sweigart",
    "year": "2022",
    "edition": null,
    "full_description": "Look Inside!\n\n\nDownload Chapter 1: WHAT IS RECURSION?\nRecursion has an intimidating reputation: it\u2019s considered to be an advanced computer science topic frequently brought up in coding interviews. But there\u2019s nothing magical about recursion.\u00a0\nThe Recursive Book of Recursion uses Python and JavaScript examples to teach the basics of recursion, exposing the ways that it\u2019s often poorly taught and clarifying the fundamental principles of all recursive algorithms. You\u2019ll learn when to use recursive functions (and, most importantly, when not to use them), how to implement the classic recursive algorithms often brought up in job interviews, and how recursive techniques can help solve countless problems involving tree traversal, combinatorics, and other tricky topics.\n\u00a0\nThis project-based guide contains complete, runnable programs to help you learn:\n\nHow recursive functions make use of the call stack, a critical data structure almost never discussed in lessons on recursion\nHow the head-tail and \u201cleap of faith\u201d techniques can simplify writing recursive functions\nHow to use recursion to write custom search scripts for your filesystem, draw fractal art, create mazes, and more\nHow optimization and memoization make recursive algorithms more efficient\n\nAl Sweigart has built a career explaining programming concepts in a fun, approachable manner. If you\u2019ve shied away from learning recursion but want to add this technique to your programming toolkit, or if you\u2019re racing to prepare for your next job interview, this book is for you.\n"
  }
]